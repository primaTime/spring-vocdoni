/*
 * Vocdoni API
 * The Vocdoni API is a REST API that substitutes the previous RPCs in order to make it easier for  developers/integrators to build on top of the voting protocol. This API facilitates creating votings using Vocdoni, without the hassle of learning a complex blockchain platform, allowing to perform all the features that enable the voting protocol such as creating an account, entity, voting process, census & vote, abstracting as much as possible the complexity and offering simple and straightforward methods to perform those actions.   You can review the API endpoints documentation in this section, the main entities are:  - [**Chain**](chain): The Vocdoni blockchain is named Vochain. It is a Byzantine fault-tolerant network based on Tendermint that executes the Vocdoni Protocol logic represented as a state machine. Its main purpose is to register votes in a  decentralized and verifiable format. In those endpoints, you can consult the state of the chain, transactions costs,  list organizations and get more Vochain info. - [**Accounts**](accounts): Identified by an Ethereum like address. An account can create and manage elections, transfer tokens, give power to other accounts on his behalf (delegates) and manage its metadata. - [**Elections**](elections): Is a rule-set of options and requirements for creating a process in which people vote a series of options. To know more about the params of an election and its lifecycle go [here](../get-started/intro#23-elections). In this section you will find all information related to an election as its information, election keys, submitted votes & how to create a new election. - [**Censuses**](censuses): The census is a key component of any voting process. It specifies the set of users (identified by a public key or address) eligible for participating in an election. To understand more about the Censuses you can check [here](../get-started/intro#21-the-census). Here you will be able to get censuses information like the Merkle root, total weight & size, import/export the censuses and create new ones. - [**Votes**](votes): All the information related to the vote issued by a participant in a vote, you can check the validity of the vote, consult your information and send a vote. - [**SIK**](sik): The Secret Identity Key is a user-generated piece of information that proves the user's identity without revealing it. It is the hash of the user's address, the signature of a public message and an optional secret part. It is used to ensure anonymous voting. All registered accounts or anonymous voters must register a SIK, and they are all stored in a Merkle tree. The `/siks` endpoints help to generate a proof of membership, get the current valid SIK roots, or check if an account has a valid SIK.   ### Errors   Backend error messages list are defined here: https://github.com/vocdoni/vocdoni-node/blob/master/api/errors.go  About the **204 no content** error: this message will be returned only if the asset being queried cannot be found but no other errors have occurred. This response is commonly used to prevent Javascript errors that may arise when a client is waiting for a  transaction to be published. During this waiting period, the client can repeatedly query the endpoint until a  successful response with a status code of 200 is received, thereby avoiding any errors that may occur due to the transaction not being published yet.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.vocdoni.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.vocdoni.invoker.JSON;

/**
 * ApiChainInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-09T17:09:26.351036+01:00[Europe/Prague]")
public class ApiChainInfo {
  public static final String SERIALIZED_NAME_BLOCK_TIME = "blockTime";
  @SerializedName(SERIALIZED_NAME_BLOCK_TIME)
  private List<Integer> blockTime;

  public static final String SERIALIZED_NAME_BLOCK_TIMESTAMP = "blockTimestamp";
  @SerializedName(SERIALIZED_NAME_BLOCK_TIMESTAMP)
  private OffsetDateTime blockTimestamp;

  public static final String SERIALIZED_NAME_CHAIN_ID = "chainId";
  @SerializedName(SERIALIZED_NAME_CHAIN_ID)
  private String chainId;

  public static final String SERIALIZED_NAME_CIRCUIT_VERSION = "circuitVersion";
  @SerializedName(SERIALIZED_NAME_CIRCUIT_VERSION)
  private String circuitVersion;

  public static final String SERIALIZED_NAME_ELECTION_COUNT = "electionCount";
  @SerializedName(SERIALIZED_NAME_ELECTION_COUNT)
  private Integer electionCount;

  public static final String SERIALIZED_NAME_GENESIS_TIME = "genesisTime";
  @SerializedName(SERIALIZED_NAME_GENESIS_TIME)
  private OffsetDateTime genesisTime;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Integer height;

  public static final String SERIALIZED_NAME_MAX_CENSUS_SIZE = "maxCensusSize";
  @SerializedName(SERIALIZED_NAME_MAX_CENSUS_SIZE)
  private Integer maxCensusSize;

  public static final String SERIALIZED_NAME_NETWORK_CAPACITY = "networkCapacity";
  @SerializedName(SERIALIZED_NAME_NETWORK_CAPACITY)
  private Integer networkCapacity;

  public static final String SERIALIZED_NAME_ORGANIZATION_COUNT = "organizationCount";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_COUNT)
  private Integer organizationCount;

  public static final String SERIALIZED_NAME_SYNCING = "syncing";
  @SerializedName(SERIALIZED_NAME_SYNCING)
  private Boolean syncing;

  public static final String SERIALIZED_NAME_TRANSACTION_COUNT = "transactionCount";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_COUNT)
  private Integer transactionCount;

  public static final String SERIALIZED_NAME_VALIDATOR_COUNT = "validatorCount";
  @SerializedName(SERIALIZED_NAME_VALIDATOR_COUNT)
  private Integer validatorCount;

  public static final String SERIALIZED_NAME_VOTE_COUNT = "voteCount";
  @SerializedName(SERIALIZED_NAME_VOTE_COUNT)
  private Integer voteCount;

  public ApiChainInfo() {
  }

  public ApiChainInfo blockTime(List<Integer> blockTime) {
    
    this.blockTime = blockTime;
    return this;
  }

  public ApiChainInfo addBlockTimeItem(Integer blockTimeItem) {
    if (this.blockTime == null) {
      this.blockTime = new ArrayList<>();
    }
    this.blockTime.add(blockTimeItem);
    return this;
  }

   /**
   * Get blockTime
   * @return blockTime
  **/
  @javax.annotation.Nullable
  public List<Integer> getBlockTime() {
    return blockTime;
  }


  public void setBlockTime(List<Integer> blockTime) {
    this.blockTime = blockTime;
  }


  public ApiChainInfo blockTimestamp(OffsetDateTime blockTimestamp) {
    
    this.blockTimestamp = blockTimestamp;
    return this;
  }

   /**
   * Get blockTimestamp
   * @return blockTimestamp
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getBlockTimestamp() {
    return blockTimestamp;
  }


  public void setBlockTimestamp(OffsetDateTime blockTimestamp) {
    this.blockTimestamp = blockTimestamp;
  }


  public ApiChainInfo chainId(String chainId) {
    
    this.chainId = chainId;
    return this;
  }

   /**
   * Get chainId
   * @return chainId
  **/
  @javax.annotation.Nullable
  public String getChainId() {
    return chainId;
  }


  public void setChainId(String chainId) {
    this.chainId = chainId;
  }


  public ApiChainInfo circuitVersion(String circuitVersion) {
    
    this.circuitVersion = circuitVersion;
    return this;
  }

   /**
   * Get circuitVersion
   * @return circuitVersion
  **/
  @javax.annotation.Nullable
  public String getCircuitVersion() {
    return circuitVersion;
  }


  public void setCircuitVersion(String circuitVersion) {
    this.circuitVersion = circuitVersion;
  }


  public ApiChainInfo electionCount(Integer electionCount) {
    
    this.electionCount = electionCount;
    return this;
  }

   /**
   * Get electionCount
   * @return electionCount
  **/
  @javax.annotation.Nullable
  public Integer getElectionCount() {
    return electionCount;
  }


  public void setElectionCount(Integer electionCount) {
    this.electionCount = electionCount;
  }


  public ApiChainInfo genesisTime(OffsetDateTime genesisTime) {
    
    this.genesisTime = genesisTime;
    return this;
  }

   /**
   * Get genesisTime
   * @return genesisTime
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getGenesisTime() {
    return genesisTime;
  }


  public void setGenesisTime(OffsetDateTime genesisTime) {
    this.genesisTime = genesisTime;
  }


  public ApiChainInfo height(Integer height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  public Integer getHeight() {
    return height;
  }


  public void setHeight(Integer height) {
    this.height = height;
  }


  public ApiChainInfo maxCensusSize(Integer maxCensusSize) {
    
    this.maxCensusSize = maxCensusSize;
    return this;
  }

   /**
   * Get maxCensusSize
   * @return maxCensusSize
  **/
  @javax.annotation.Nullable
  public Integer getMaxCensusSize() {
    return maxCensusSize;
  }


  public void setMaxCensusSize(Integer maxCensusSize) {
    this.maxCensusSize = maxCensusSize;
  }


  public ApiChainInfo networkCapacity(Integer networkCapacity) {
    
    this.networkCapacity = networkCapacity;
    return this;
  }

   /**
   * Get networkCapacity
   * @return networkCapacity
  **/
  @javax.annotation.Nullable
  public Integer getNetworkCapacity() {
    return networkCapacity;
  }


  public void setNetworkCapacity(Integer networkCapacity) {
    this.networkCapacity = networkCapacity;
  }


  public ApiChainInfo organizationCount(Integer organizationCount) {
    
    this.organizationCount = organizationCount;
    return this;
  }

   /**
   * Get organizationCount
   * @return organizationCount
  **/
  @javax.annotation.Nullable
  public Integer getOrganizationCount() {
    return organizationCount;
  }


  public void setOrganizationCount(Integer organizationCount) {
    this.organizationCount = organizationCount;
  }


  public ApiChainInfo syncing(Boolean syncing) {
    
    this.syncing = syncing;
    return this;
  }

   /**
   * Get syncing
   * @return syncing
  **/
  @javax.annotation.Nullable
  public Boolean getSyncing() {
    return syncing;
  }


  public void setSyncing(Boolean syncing) {
    this.syncing = syncing;
  }


  public ApiChainInfo transactionCount(Integer transactionCount) {
    
    this.transactionCount = transactionCount;
    return this;
  }

   /**
   * Get transactionCount
   * @return transactionCount
  **/
  @javax.annotation.Nullable
  public Integer getTransactionCount() {
    return transactionCount;
  }


  public void setTransactionCount(Integer transactionCount) {
    this.transactionCount = transactionCount;
  }


  public ApiChainInfo validatorCount(Integer validatorCount) {
    
    this.validatorCount = validatorCount;
    return this;
  }

   /**
   * Get validatorCount
   * @return validatorCount
  **/
  @javax.annotation.Nullable
  public Integer getValidatorCount() {
    return validatorCount;
  }


  public void setValidatorCount(Integer validatorCount) {
    this.validatorCount = validatorCount;
  }


  public ApiChainInfo voteCount(Integer voteCount) {
    
    this.voteCount = voteCount;
    return this;
  }

   /**
   * Get voteCount
   * @return voteCount
  **/
  @javax.annotation.Nullable
  public Integer getVoteCount() {
    return voteCount;
  }


  public void setVoteCount(Integer voteCount) {
    this.voteCount = voteCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiChainInfo apiChainInfo = (ApiChainInfo) o;
    return Objects.equals(this.blockTime, apiChainInfo.blockTime) &&
        Objects.equals(this.blockTimestamp, apiChainInfo.blockTimestamp) &&
        Objects.equals(this.chainId, apiChainInfo.chainId) &&
        Objects.equals(this.circuitVersion, apiChainInfo.circuitVersion) &&
        Objects.equals(this.electionCount, apiChainInfo.electionCount) &&
        Objects.equals(this.genesisTime, apiChainInfo.genesisTime) &&
        Objects.equals(this.height, apiChainInfo.height) &&
        Objects.equals(this.maxCensusSize, apiChainInfo.maxCensusSize) &&
        Objects.equals(this.networkCapacity, apiChainInfo.networkCapacity) &&
        Objects.equals(this.organizationCount, apiChainInfo.organizationCount) &&
        Objects.equals(this.syncing, apiChainInfo.syncing) &&
        Objects.equals(this.transactionCount, apiChainInfo.transactionCount) &&
        Objects.equals(this.validatorCount, apiChainInfo.validatorCount) &&
        Objects.equals(this.voteCount, apiChainInfo.voteCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockTime, blockTimestamp, chainId, circuitVersion, electionCount, genesisTime, height, maxCensusSize, networkCapacity, organizationCount, syncing, transactionCount, validatorCount, voteCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiChainInfo {\n");
    sb.append("    blockTime: ").append(toIndentedString(blockTime)).append("\n");
    sb.append("    blockTimestamp: ").append(toIndentedString(blockTimestamp)).append("\n");
    sb.append("    chainId: ").append(toIndentedString(chainId)).append("\n");
    sb.append("    circuitVersion: ").append(toIndentedString(circuitVersion)).append("\n");
    sb.append("    electionCount: ").append(toIndentedString(electionCount)).append("\n");
    sb.append("    genesisTime: ").append(toIndentedString(genesisTime)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    maxCensusSize: ").append(toIndentedString(maxCensusSize)).append("\n");
    sb.append("    networkCapacity: ").append(toIndentedString(networkCapacity)).append("\n");
    sb.append("    organizationCount: ").append(toIndentedString(organizationCount)).append("\n");
    sb.append("    syncing: ").append(toIndentedString(syncing)).append("\n");
    sb.append("    transactionCount: ").append(toIndentedString(transactionCount)).append("\n");
    sb.append("    validatorCount: ").append(toIndentedString(validatorCount)).append("\n");
    sb.append("    voteCount: ").append(toIndentedString(voteCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("blockTime");
    openapiFields.add("blockTimestamp");
    openapiFields.add("chainId");
    openapiFields.add("circuitVersion");
    openapiFields.add("electionCount");
    openapiFields.add("genesisTime");
    openapiFields.add("height");
    openapiFields.add("maxCensusSize");
    openapiFields.add("networkCapacity");
    openapiFields.add("organizationCount");
    openapiFields.add("syncing");
    openapiFields.add("transactionCount");
    openapiFields.add("validatorCount");
    openapiFields.add("voteCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ApiChainInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiChainInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiChainInfo is not found in the empty JSON string", ApiChainInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiChainInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiChainInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("blockTime") != null && !jsonObj.get("blockTime").isJsonNull() && !jsonObj.get("blockTime").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `blockTime` to be an array in the JSON string but got `%s`", jsonObj.get("blockTime").toString()));
      }
      if ((jsonObj.get("chainId") != null && !jsonObj.get("chainId").isJsonNull()) && !jsonObj.get("chainId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chainId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chainId").toString()));
      }
      if ((jsonObj.get("circuitVersion") != null && !jsonObj.get("circuitVersion").isJsonNull()) && !jsonObj.get("circuitVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `circuitVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("circuitVersion").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiChainInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiChainInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiChainInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiChainInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiChainInfo>() {
           @Override
           public void write(JsonWriter out, ApiChainInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiChainInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApiChainInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApiChainInfo
  * @throws IOException if the JSON string is invalid with respect to ApiChainInfo
  */
  public static ApiChainInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiChainInfo.class);
  }

 /**
  * Convert an instance of ApiChainInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

